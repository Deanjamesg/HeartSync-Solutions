@model HeartSyncSolutions.Models.ApplicationUser

@{
    var eventsAttended = ViewBag.EventsAttended ?? 0;
    var totalDonations = ViewBag.TotalDonations ?? 0.0;
    
    // Determine user type
    var userType = "";
    if (Model.IsVolunteer && Model.IsDonor)
    {
        userType = "Volunteer & Donor";
    }
    else if (Model.IsVolunteer)
    {
        userType = "Volunteer";
    }
    else if (Model.IsDonor)
    {
        userType = "Donor";
    }
    else
    {
        userType = "Member";
    }
}

<div class="content-card">
    <h3 class="mb-4">Account Settings</h3>

    <!-- Success/Error Message Container -->
    <div id="message-container"></div>

    <div class="row">
        <div class="col-md-8">
            <!-- Personal Information -->
            <div class="card mb-4">
                <div class="card-header bg-white">
                    <h5 class="mb-0">Personal Information</h5>
                </div>
                <div class="card-body">
                    <form asp-controller="User" asp-action="UpdatePersonalInfo" method="post" 
                          hx-post="/User/UpdatePersonalInfo" 
                          hx-target="#content-container"
                          hx-swap="innerHTML">
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="firstName" class="form-label">First Name</label>
                                <input type="text" class="form-control" id="firstName" name="firstName" value="@Model.FirstName" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="lastName" class="form-label">Last Name</label>
                                <input type="text" class="form-control" id="lastName" name="lastName" value="@Model.LastName" required>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="email" class="form-label">Email Address</label>
                            <input type="email" class="form-control" id="email" name="email" value="@Model.Email" required>
                        </div>

                        <div class="mb-3">
                            <label for="phone" class="form-label">Phone Number</label>
                            <input type="tel" class="form-control" id="phone" name="phone" value="@(Model.ContactNumber ?? Model.PhoneNumber ?? "")">
                        </div>

                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-check-circle me-2"></i>Save Changes
                        </button>
                    </form>
                </div>
            </div>

            <!-- Account Security -->
            <div class="card mb-4">
                <div class="card-header bg-white">
                    <h5 class="mb-0">Account Security</h5>
                </div>
                <div class="card-body">
                    <form id="passwordForm" asp-controller="User" asp-action="UpdatePassword" method="post">
                        @Html.AntiForgeryToken()
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">Current Password</label>
                            <input type="password" class="form-control" id="currentPassword" name="CurrentPassword" placeholder="Enter current password" required>
                            <span class="text-danger" id="currentPasswordError"></span>
                        </div>

                        <div class="mb-3">
                            <label for="newPassword" class="form-label">New Password</label>
                            <input type="password" class="form-control" id="newPassword" name="NewPassword" placeholder="Enter new password (minimum 6 characters)" required minlength="6">
                            <small class="form-text text-muted">Password must be at least 6 characters long.</small>
                            <span class="text-danger" id="newPasswordError"></span>
                        </div>

                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirm New Password</label>
                            <input type="password" class="form-control" id="confirmPassword" name="ConfirmPassword" placeholder="Confirm new password" required>
                            <span class="text-danger" id="confirmPasswordError"></span>
                        </div>

                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-shield-check me-2"></i>Update Password
                        </button>
                    </form>
                </div>
            </div>

            <!-- Privacy Settings -->
            <div class="card mb-4">
                <div class="card-header bg-white">
                    <h5 class="mb-0">Privacy Settings</h5>
                </div>
                <div class="card-body">
                    <form asp-controller="User" asp-action="UpdatePrivacySettings" method="post" id="privacyForm">
                        @Html.AntiForgeryToken()
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="showDonations" name="showDonations">
                            <label class="form-check-label" for="showDonations">
                                <strong>Show my donations anonymously to the public</strong>
                            </label>
                        </div>

                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-lock me-2"></i>Update Privacy
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-md-4">
            <!-- Profile Summary -->
            <div class="card mb-4">
                <div class="card-body text-center">
                    <div class="profile-avatar mb-3">
                        <i class="bi bi-person-circle display-1 text-primary"></i>
                    </div>
                    <h5>@Model.FirstName @Model.LastName</h5>
                    <p class="text-muted small">@Model.Email</p>
                    <hr>
                    <div class="text-start">
                        <small class="text-muted">User Type</small>
                        <p class="mb-0">@userType</p>
                    </div>
                </div>
            </div>

            <!-- Activity Summary -->
            <div class="card mb-4">
                <div class="card-header bg-white">
                    <h6 class="mb-0">Activity Summary</h6>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-3">
                        <span class="text-muted">Events Attended</span>
                        <strong>@eventsAttended</strong>
                    </div>
                    <div class="d-flex justify-content-between mb-3">
                        <span class="text-muted">Total Donations</span>
                        <strong>R(@totalDonations.ToString("N2"))</strong>
                    </div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="card">
                <div class="card-header bg-white">
                    <h6 class="mb-0">Quick Actions</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button class="btn btn-primary btn-sm" hx-get="/Event/SignedUpEvents" hx-target="#content-container">
                            <i class="bi bi-calendar-check me-2"></i>My Events
                        </button>
                        <button class="btn btn-primary btn-sm" hx-get="/Donation/DonationHistory" hx-target="#content-container">
                            <i class="bi bi-clock-history me-2"></i>Donation History
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card-header {
        border-bottom: 1px solid #e2e8f0;
    }

    .profile-avatar {
        width: 100%;
        display: flex;
        justify-content: center;
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
    }
    
    .btn-primary:hover {
        background: linear-gradient(135deg, #5a67d8 0%, #6a3d94 100%);
    }

    .form-check-input:checked {
        background-color: #667eea;
        border-color: #667eea;
    }
    
    .text-danger {
        font-size: 0.875rem;
        margin-top: 0.25rem;
        display: block;
    }
</style>

<script>
    // Ensure this runs after the DOM is loaded
    (function() {
        // Handle password form submission
        const passwordForm = document.getElementById('passwordForm');
        if (passwordForm) {
            passwordForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                // Clear previous errors
                document.getElementById('currentPasswordError').textContent = '';
                document.getElementById('newPasswordError').textContent = '';
                document.getElementById('confirmPasswordError').textContent = '';
                
                const formData = new FormData(this);
                const newPassword = document.getElementById('newPassword').value;
                const confirmPassword = document.getElementById('confirmPassword').value;
                
                // Client-side validation
                if (newPassword !== confirmPassword) {
                    document.getElementById('confirmPasswordError').textContent = 'Passwords do not match.';
                    return;
                }
                
                if (newPassword.length < 6) {
                    document.getElementById('newPasswordError').textContent = 'Password must be at least 6 characters long.';
                    return;
                }
                
                try {
                    const response = await fetch('/User/UpdatePassword', {
                        method: 'POST',
                        body: formData
                    });
                    
                    const result = await response.json();
                    
                    const messageContainer = document.getElementById('message-container');
                    
                    if (result.success) {
                        messageContainer.innerHTML = `
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                                <i class="bi bi-check-circle me-2"></i>${result.message}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        `;
                        
                        // Clear the form
                        passwordForm.reset();
                        
                        // Scroll to top to show message
                        const contentCard = document.querySelector('.content-card');
                        if (contentCard) {
                            contentCard.scrollIntoView({ behavior: 'smooth', block: 'start' });
                        }
                    } else {
                        messageContainer.innerHTML = `
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                <i class="bi bi-exclamation-triangle me-2"></i>${result.message}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        `;
                        
                        // Scroll to top to show message
                        const contentCard = document.querySelector('.content-card');
                        if (contentCard) {
                            contentCard.scrollIntoView({ behavior: 'smooth', block: 'start' });
                        }
                    }
                } catch (error) {
                    console.error('Error updating password:', error);
                    const messageContainer = document.getElementById('message-container');
                    messageContainer.innerHTML = `
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="bi bi-exclamation-triangle me-2"></i>An error occurred while updating your password. Please try again.
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    `;
                }
            });
        }
        
        // Handle privacy form submission
        const privacyForm = document.getElementById('privacyForm');
        if (privacyForm) {
            privacyForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = new FormData(this);
                
                try {
                    const response = await fetch('/User/UpdatePrivacySettings', {
                        method: 'POST',
                        body: formData
                    });
                    
                    const result = await response.json();
                    
                    const messageContainer = document.getElementById('message-container');
                    
                    if (result.success) {
                        messageContainer.innerHTML = `
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                                <i class="bi bi-check-circle me-2"></i>${result.message}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        `;
                        
                        // Scroll to top to show message
                        const contentCard = document.querySelector('.content-card');
                        if (contentCard) {
                            contentCard.scrollIntoView({ behavior: 'smooth', block: 'start' });
                        }
                    } else {
                        messageContainer.innerHTML = `
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                <i class="bi bi-exclamation-triangle me-2"></i>${result.message}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        `;
                    }
                } catch (error) {
                    console.error('Error updating privacy settings:', error);
                }
            });
        }
    })();
</script>
